(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{130:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),u=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=u(n),d=r,m=s["".concat(l,".").concat(d)]||s[d]||b[d]||o;return n?a.a.createElement(m,i(i({ref:t},p),{},{components:n})):a.a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(7),o=(n(0),n(130)),l={title:"Multiple clients"},i={unversionedId:"features/multiple-clients",id:"version-1.0/features/multiple-clients",isDocsHomePage:!1,title:"Multiple clients",description:"With apollo-angular it is possible to use multiple Apollo Clients in your application.",source:"@site/versioned_docs/version-1.0/features/multiple-clients.md",permalink:"/docs/1.0/features/multiple-clients",editUrl:"https://github.com/kamilkisiela/apollo-angular/edit/master/website/versioned_docs/version-1.0/features/multiple-clients.md",version:"1.0",sidebar:"version-1.0/docs",previous:{title:"Integrating with NativeScript",permalink:"/docs/1.0/features/nativescript"},next:{title:"Static Typing",permalink:"/docs/1.0/features/static-typing"}},c=[{value:"Creating clients",id:"creating-clients",children:[]},{value:"Using Apollo",id:"using-apollo",children:[]}],p={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"With ",Object(o.b)("inlineCode",{parentName:"p"},"apollo-angular")," it is possible to use multiple Apollo Clients in your application."),Object(o.b)("h2",{id:"creating-clients"},"Creating clients"),Object(o.b)("p",null,"You are already familiar with how to create a single client so it should be easy to understand it."),Object(o.b)("p",null,"There are few ways of creating named clients."),Object(o.b)("p",null,"One way is to use ",Object(o.b)("inlineCode",{parentName:"p"},"Apollo.create"),". Normally, you would use it like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"apollo.create(options)\n")),Object(o.b)("p",null,"This will define a default client but there is one optional argument."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"apollo.create(options, name?)\n")),Object(o.b)("p",null,"An example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"apollo.create(defaultOptions)\napollo.create(extraOptions, 'extra')\n")),Object(o.b)("p",null,"Now you have the default client and one called ",Object(o.b)("inlineCode",{parentName:"p"},"extra"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Important thing to know is if you want to define a default client, simply do not use any ",Object(o.b)("inlineCode",{parentName:"p"},"name")," argument or set it to ",Object(o.b)("inlineCode",{parentName:"p"},"default"),".")),Object(o.b)("p",null,"The other way is to use helper methods."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"apollo.createDefault(options)\n// and\napollo.createNamed(name, options);\n")),Object(o.b)("h2",{id:"using-apollo"},"Using Apollo"),Object(o.b)("p",null,"Since we have our clients available in an app, now is the time to see how to use them."),Object(o.b)("p",null,"If a client is defined as the default, you can directly use all methods of the ",Object(o.b)("inlineCode",{parentName:"p"},"Apollo")," service."),Object(o.b)("p",null,"About named clients, simply use the method called ",Object(o.b)("inlineCode",{parentName:"p"},"use(name: string)"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"import { Component, OnInit } from '@angular/core';\nimport { Apollo, QueryRef } from 'apollo-angular';\n\n@Component({...})\nexport class AppComponent {\n  feedQuery: QueryRef<any>;\n\n  constructor(apollo: Apollo) {\n    // use default\n    this.feedQuery = apollo.watchQuery({...});\n\n    // use extra client\n    this.feedQuery = apollo.use('extra').watchQuery({...});\n  }\n}\n")))}u.isMDXComponent=!0}}]);